<UserControl 
    x:Class="TnCode.TnCodeApp.R.Views.GgplotBuilderView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i1="http://schemas.microsoft.com/xaml/behaviors"
    prism:ViewModelLocator.AutoWireViewModel="True">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <!--Controls-->
        <GroupBox
            Grid.Column="0"
            Header="Controls"
            IsEnabled="{Binding AreControlsEnabaled}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--Buttons-->
                <Grid
                    Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button 
                        Grid.Column="0"
                        Content="New Layer"
                        Margin="2"
                        Command="{Binding NewLayerCommand}"
                        ToolTip="Add a new layer to the plot."/>

                    <Button 
                        Grid.Column="1"
                        Content="Clear Layers"
                        Margin="2"
                        Command="{Binding ClearLayersCommand}"
                        ToolTip="Clear all the layers from the plot."/>
                </Grid>

                <!--Layers-->
                <DataGrid 
                    x:Name="layersList"
                    Grid.Row="1" 
                    ColumnWidth ="*"
                    Margin="2" 
                    ItemsSource="{Binding Path=Layers}" 
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    AutoGenerateColumns="False"
                    ToolTip="Use to select a layer to edit or determine if it should be shown in the current plot.">

                    <i1:Interaction.Triggers>
                        <i1:EventTrigger EventName="SelectionChanged">
                            <i1:InvokeCommandAction Command="{Binding LayerSelectedCommand}" CommandParameter="{Binding SelectedItem, ElementName=layersList}" />
                        </i1:EventTrigger>
                    </i1:Interaction.Triggers>

                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Header="Data"
                            Width="*"
                            Binding="{Binding Path=Data}">
                            
                        </DataGridTextColumn>

                        <DataGridTextColumn
                            Header="Geom"
                            Width="*"
                            Binding="{Binding Path=Geom}">
                            
                        </DataGridTextColumn>
                        <!--<DataGridTemplateColumn
                            Header="Data"
                            Width="*"
                            >
                            --><!--<DataGridTemplateColumn.CellTemplate>
                                <ItemContainerTemplate>
                                    <ComboBox
                                        x:Name="ComboData"
                                        materialDesign:HintAssist.Hint="Selelct Data set"
                                        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},  Path=DataContext.DataSets}"
                                        SelectedItem="{Binding Path=Data}"
                                        Background="{DynamicResource MaterialDesignPaper}">
                                        <i1:Interaction.Triggers>
                                            <i1:EventTrigger EventName="SelectionChanged">
                                                <i1:InvokeCommandAction 
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.DataSelectedCommand}" 
                                                    CommandParameter="{Binding Path=SelectedValue, ElementName=ComboData}" />
                                            </i1:EventTrigger>
                                        </i1:Interaction.Triggers>
                                    </ComboBox>
                                </ItemContainerTemplate>
                            </DataGridTemplateColumn.CellTemplate>--><!--
                        </DataGridTemplateColumn>-->

                        <!--<DataGridTemplateColumn
                            x:Name="ComboGeom"
                            Header="Geom"
                            Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <ItemContainerTemplate>
                                    <ComboBox
                                        x:Name="ComboGeom"
                                        materialDesign:HintAssist.Hint="Select geom"
                                        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},  Path=DataContext.Geoms}"
                                        SelectedItem="{Binding Path=Geom}"
                                        Background="{DynamicResource MaterialDesignPaper}">
                                        <i1:Interaction.Triggers>
                                            <i1:EventTrigger EventName="SelectionChanged">
                                                <i1:InvokeCommandAction 
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Path=DataContext.GeomSelectedCommand}" 
                                                    CommandParameter="{Binding Path=SelectedValue, ElementName=ComboGeom}" />
                                            </i1:EventTrigger>
                                        </i1:Interaction.Triggers>
                                    </ComboBox>
                                </ItemContainerTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->

                        <DataGridCheckBoxColumn
                                Header="Legend"
                                Binding="{Binding Path=ShowLegend}"
                                Width="*"/>

                        <DataGridCheckBoxColumn
                                Header="Show"
                                Binding="{Binding Path=ShowInPlot}"
                                Width="*"/>

                    </DataGrid.Columns>

                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem 
                                Header="Delete Layer" 
                                Command="{Binding DeleteLayerCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    
                </DataGrid>

                <!--Data and Geom-->
                <Grid
                    Grid.Row="2">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid
                        Grid.Row="0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Button
                            Grid.Column="0"
                            Content="Update"
                            Command="{Binding UpdateCommand}"/>

                        <CheckBox
                            Grid.Column="1"
                            Content="Auto Update"
                            Command="{Binding ToggleAutoCommand}"
                            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                        
                    </Grid>
                    
                    <ComboBox
                        x:Name="ComboData"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="2"
                        ItemsSource="{Binding DataSets}"
                        SelectedItem="{Binding SelectedLayer.Data}">
                        <i1:Interaction.Triggers>
                            <i1:EventTrigger EventName="SelectionChanged">
                                <i1:InvokeCommandAction 
                                        Command="{Binding DataSelectedCommand}" 
                                        CommandParameter="{Binding Path=SelectedValue, ElementName=ComboData}" />
                            </i1:EventTrigger>
                        </i1:Interaction.Triggers>
                    </ComboBox>

                    <ComboBox
                        x:Name="ComboGeom"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="2"
                        ItemsSource="{Binding Geoms}"
                        SelectedItem="{Binding SelectedLayer.Geom}">
                        <i1:Interaction.Triggers>
                            <i1:EventTrigger EventName="SelectionChanged">
                                <i1:InvokeCommandAction 
                                        Command="{Binding GeomSelectedCommand}" 
                                        CommandParameter="{Binding Path=SelectedValue, ElementName=ComboGeom}" />
                            </i1:EventTrigger>
                        </i1:Interaction.Triggers>
                    </ComboBox>
                </Grid>
                
                <!--Dynamic variable controls-->
                <Grid
                    Grid.Row="3">

                    <UniformGrid 
                        Columns="5">
                        <FrameworkElement x:Name="tabWidthSizer"/>
                    </UniformGrid>

                    <TabControl
                        x:Name="tabControl_Layer">

                        <TabItem                                    
                            Header="Aesthetic"
                            Width="{Binding ElementName=tabWidthSizer, Path=ActualWidth}">
                            <ContentControl
                                prism:RegionManager.RegionName="AestheticRegion"/>

                        </TabItem>

                        <TabItem
                            x:Name="StatTab"
                            Header="Stat"
                            Width="{Binding ElementName=tabWidthSizer, Path=ActualWidth}">
                            <ContentControl
                                prism:RegionManager.RegionName="StatRegion"/>

                        </TabItem>

                        <TabItem
                            Header="Position"
                            Width="{Binding ElementName=tabWidthSizer, Path=ActualWidth}">
                            <ContentControl
                                prism:RegionManager.RegionName="PositionRegion"/>
                        </TabItem>
                        
                    </TabControl>
                </Grid>

                <!-- Chart controls -->
                <TabControl
                    Grid.Row="4">

                    <TabItem
                        Header="Titles"
                        Width="{Binding ElementName=tabWidthSizer, Path=ActualWidth}">
                        <ContentControl
                                prism:RegionManager.RegionName="TitlesRegion"/>
                    </TabItem>

                    <TabItem
                        Header="Facet"
                        Width="{Binding ElementName=tabWidthSizer, Path=ActualWidth}">
                        <ContentControl
                                prism:RegionManager.RegionName="FacetRegion"/>
                    </TabItem>
                    
                </TabControl>

            </Grid>

        </GroupBox>

        <!--Chart-->
        <GroupBox
            Grid.Column="1"
            Header="Chart">
            <Image 
                Source="{Binding ChartImage}"
                SnapsToDevicePixels="True"
                RenderOptions.EdgeMode="Aliased"
                RenderOptions.BitmapScalingMode="HighQuality"
                Stretch="Uniform">

                <Image.ContextMenu>
                    <ContextMenu>
                        <MenuItem 
                                Header="Copy Chart" 
                                Command="{Binding CopyChartCommand}"/>
                    </ContextMenu>
                </Image.ContextMenu>
            </Image>
        </GroupBox>

    </Grid>
</UserControl>
